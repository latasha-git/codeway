{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":2347441,"sourceType":"datasetVersion","datasetId":1417162}],"dockerImageVersionId":30646,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false},"colab":{"provenance":[{"file_id":"https://storage.googleapis.com/kaggle-colab-exported-notebooks/movie-genre-classification-d2795a87-b6c2-4757-ad15-465babe74327.ipynb?X-Goog-Algorithm=GOOG4-RSA-SHA256&X-Goog-Credential=gcp-kaggle-com%40kaggle-161607.iam.gserviceaccount.com/20240221/auto/storage/goog4_request&X-Goog-Date=20240221T144341Z&X-Goog-Expires=259200&X-Goog-SignedHeaders=host&X-Goog-Signature=2a33bb6b47786212a163a5e7bafef2ca76d34be8d1dd1de23281af2f7d7eb33f505e9b92bf0658db49a3f14d75ee7e0226e193c95929a38d2edc499835f8d285301d47b2cf1ef7ec8509163fd79970ad64780a9a61bfc60e2a89c4c60777dc0bf8bab82f2594e28b24bc0db8d0e1a1a4de651c32c4aecec04710a1a44aaea239bf49a3794edda6c873c1024bac7775b48c98fbe6e822d2cff6acfdfd502fcb3acc6c997dd093286235878cbf0bf9c7010f0ce5805b97c8bb320259faca92a5bbb0ac8d9d54756c9da0e14203d4f2b045ed19373ef684487cf2dfc2d8af80b2b6a4599e9589ff138dc1e40d9f641bc961017dbda3eaba4789213c462f28e3539a","timestamp":1708531304576}],"toc_visible":true}},"nbformat_minor":0,"nbformat":4,"cells":[{"cell_type":"code","source":["\n","# This Python 3 environment comes with many helpful analytics libraries installed\n","# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n","# For example, here's several helpful packages to load\n","\n","import numpy as np # linear algebra\n","import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n","import matplotlib.pyplot as plt\n","import pandas as pd\n","import seaborn as sns\n","from sklearn.model_selection import train_test_split\n","from sklearn.feature_extraction.text import TfidfVectorizer\n","from sklearn.svm import SVC\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.metrics import accuracy_score\n","\n","# Input data files are available in the read-only \"../input/\" directory\n","# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n","\n","import os\n","for dirname, _, filenames in os.walk('/kaggle/input'):\n","    for filename in filenames:\n","        print(os.path.join(dirname, filename))\n","\n","# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\"\n","# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session\n","df = pd.read_csv(\"/kaggle/input/Genre Classification Dataset/train_data.txt\", sep=\":::\", header=None, names=[\"ID\", \"Title\", \"Genres\",\"Description\"], engine='python')\n","print(df.head())\n","\n"],"metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-02-20T09:17:34.3655Z","iopub.execute_input":"2024-02-20T09:17:34.36658Z","iopub.status.idle":"2024-02-20T09:17:35.384381Z","shell.execute_reply.started":"2024-02-20T09:17:34.366532Z","shell.execute_reply":"2024-02-20T09:17:35.382794Z"},"trusted":true,"id":"ewAJxW24WvD2","executionInfo":{"status":"ok","timestamp":1708530891555,"user_tz":-330,"elapsed":23,"user":{"displayName":"","userId":""}},"outputId":"f10f18a7-b0f5-4a4c-bd01-4638a33cdd77","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["/kaggle/input/Genre Classification Dataset/train_data.txt\n","/kaggle/input/Genre Classification Dataset/description.txt\n","/kaggle/input/Genre Classification Dataset/test_data_solution.txt\n","/kaggle/input/Genre Classification Dataset/test_data.txt\n","   ID                               Title      Genres  \\\n","0   1       Oscar et la dame rose (2009)       drama    \n","1   2                       Cupid (1997)    thriller    \n","2   3   Young, Wild and Wonderful (1980)       adult    \n","3   4              The Secret Sin (1915)       drama    \n","4   5             The Unrecovered (2007)       drama    \n","\n","                                         Description  \n","0   Listening in to a conversation between his do...  \n","1   A brother and sister with a past incestuous r...  \n","2   As the bus empties the students for their fie...  \n","3   To help their unemployed father make ends mee...  \n","4   The film's title refers not only to the un-re...  \n"]}]},{"source":["\n","# IMPORTANT: RUN THIS CELL IN ORDER TO IMPORT YOUR KAGGLE DATA SOURCES\n","# TO THE CORRECT LOCATION (/kaggle/input) IN YOUR NOTEBOOK,\n","# THEN FEEL FREE TO DELETE THIS CELL.\n","# NOTE: THIS NOTEBOOK ENVIRONMENT DIFFERS FROM KAGGLE'S PYTHON\n","# ENVIRONMENT SO THERE MAY BE MISSING LIBRARIES USED BY YOUR\n","# NOTEBOOK.\n","\n","import os\n","import sys\n","from tempfile import NamedTemporaryFile\n","from urllib.request import urlopen\n","from urllib.parse import unquote, urlparse\n","from urllib.error import HTTPError\n","from zipfile import ZipFile\n","import tarfile\n","import shutil\n","\n","CHUNK_SIZE = 40960\n","DATA_SOURCE_MAPPING = ':https%3A%2F%2Fstorage.googleapis.com%2Fkaggle-data-sets%2F1417162%2F2347441%2Fbundle%2Farchive.zip%3FX-Goog-Algorithm%3DGOOG4-RSA-SHA256%26X-Goog-Credential%3Dgcp-kaggle-com%2540kaggle-161607.iam.gserviceaccount.com%252F20240221%252Fauto%252Fstorage%252Fgoog4_request%26X-Goog-Date%3D20240221T144340Z%26X-Goog-Expires%3D259200%26X-Goog-SignedHeaders%3Dhost%26X-Goog-Signature%3D22716bb02c5bdd1c8f739b6f622f3f3593db5668d15b8d899246299ad25abf94e1e6029f3bfafab1a88eaf3913daf743da6342d03fe4c40bfb020033fb84276faefcdfc0b1165821d60898e21ac06e8dac0ddf4b187a9114feb2d3c148db737a26720f8ce070e969bc3ced077c294a4b96d560765af752b1ed6e19e78354e48397a970833ea22f903bdc3f6b5e69bd477a187f3a777cdfed45c7ee040fd44f84910c550acf7546be3571b5026387ae814e1ab22b7ad2d1115f31396fecbd5dd6428ffe1e3e410940eb00bfe159efbf21b18e83d4b6b9001577cee09c9c2d66bf0a795ff33da25df2c4dd3661d2ee78339df7cf48c5c5d132482134d007264c14'\n","\n","KAGGLE_INPUT_PATH='/kaggle/input'\n","KAGGLE_WORKING_PATH='/kaggle/working'\n","KAGGLE_SYMLINK='kaggle'\n","\n","!umount /kaggle/input/ 2> /dev/null\n","shutil.rmtree('/kaggle/input', ignore_errors=True)\n","os.makedirs(KAGGLE_INPUT_PATH, 0o777, exist_ok=True)\n","os.makedirs(KAGGLE_WORKING_PATH, 0o777, exist_ok=True)\n","\n","try:\n","  os.symlink(KAGGLE_INPUT_PATH, os.path.join(\"..\", 'input'), target_is_directory=True)\n","except FileExistsError:\n","  pass\n","try:\n","  os.symlink(KAGGLE_WORKING_PATH, os.path.join(\"..\", 'working'), target_is_directory=True)\n","except FileExistsError:\n","  pass\n","\n","for data_source_mapping in DATA_SOURCE_MAPPING.split(','):\n","    directory, download_url_encoded = data_source_mapping.split(':')\n","    download_url = unquote(download_url_encoded)\n","    filename = urlparse(download_url).path\n","    destination_path = os.path.join(KAGGLE_INPUT_PATH, directory)\n","    try:\n","        with urlopen(download_url) as fileres, NamedTemporaryFile() as tfile:\n","            total_length = fileres.headers['content-length']\n","            print(f'Downloading {directory}, {total_length} bytes compressed')\n","            dl = 0\n","            data = fileres.read(CHUNK_SIZE)\n","            while len(data) > 0:\n","                dl += len(data)\n","                tfile.write(data)\n","                done = int(50 * dl / int(total_length))\n","                sys.stdout.write(f\"\\r[{'=' * done}{' ' * (50-done)}] {dl} bytes downloaded\")\n","                sys.stdout.flush()\n","                data = fileres.read(CHUNK_SIZE)\n","            if filename.endswith('.zip'):\n","              with ZipFile(tfile) as zfile:\n","                zfile.extractall(destination_path)\n","            else:\n","              with tarfile.open(tfile.name) as tarfile:\n","                tarfile.extractall(destination_path)\n","            print(f'\\nDownloaded and uncompressed: {directory}')\n","    except HTTPError as e:\n","        print(f'Failed to load (likely expired) {download_url} to path {destination_path}')\n","        continue\n","    except OSError as e:\n","        print(f'Failed to load {download_url} to path {destination_path}')\n","        continue\n","\n","print('Data source import complete.')\n"],"metadata":{"id":"9Jbdu4T9WvD0"},"cell_type":"code","outputs":[],"execution_count":null},{"cell_type":"code","source":["df.info()"],"metadata":{"execution":{"iopub.status.busy":"2024-02-20T09:17:35.386924Z","iopub.execute_input":"2024-02-20T09:17:35.38726Z","iopub.status.idle":"2024-02-20T09:17:35.442596Z","shell.execute_reply.started":"2024-02-20T09:17:35.387233Z","shell.execute_reply":"2024-02-20T09:17:35.440937Z"},"trusted":true,"id":"Y2_7YA8vWvD3","executionInfo":{"status":"ok","timestamp":1708530891556,"user_tz":-330,"elapsed":20,"user":{"displayName":"","userId":""}},"outputId":"7b29f9f4-3136-42b4-9900-8fafbf776097","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 54214 entries, 0 to 54213\n","Data columns (total 4 columns):\n"," #   Column       Non-Null Count  Dtype \n","---  ------       --------------  ----- \n"," 0   ID           54214 non-null  int64 \n"," 1   Title        54214 non-null  object\n"," 2   Genres       54214 non-null  object\n"," 3   Description  54214 non-null  object\n","dtypes: int64(1), object(3)\n","memory usage: 1.7+ MB\n"]}]},{"cell_type":"code","source":["df.describe()"],"metadata":{"execution":{"iopub.status.busy":"2024-02-20T09:17:35.444479Z","iopub.execute_input":"2024-02-20T09:17:35.444924Z","iopub.status.idle":"2024-02-20T09:17:35.473018Z","shell.execute_reply.started":"2024-02-20T09:17:35.444886Z","shell.execute_reply":"2024-02-20T09:17:35.471744Z"},"trusted":true,"id":"XZf2v1oDWvD3","executionInfo":{"status":"ok","timestamp":1708530891556,"user_tz":-330,"elapsed":18,"user":{"displayName":"","userId":""}},"outputId":"76a6e654-d38b-4d51-a985-afb9ec2293cd","colab":{"base_uri":"https://localhost:8080/","height":300}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 ID\n","count  54214.000000\n","mean   27107.500000\n","std    15650.378084\n","min        1.000000\n","25%    13554.250000\n","50%    27107.500000\n","75%    40660.750000\n","max    54214.000000"],"text/html":["\n","  <div id=\"df-8b1120b8-3e15-412d-80c2-ba8929186770\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>54214.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>27107.500000</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>15650.378084</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>13554.250000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>27107.500000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>40660.750000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>54214.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8b1120b8-3e15-412d-80c2-ba8929186770')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8b1120b8-3e15-412d-80c2-ba8929186770 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8b1120b8-3e15-412d-80c2-ba8929186770');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5e5abfce-56ea-4606-826a-a13ad6804eb3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5e5abfce-56ea-4606-826a-a13ad6804eb3')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5e5abfce-56ea-4606-826a-a13ad6804eb3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 19538.683100731912,\n        \"min\": 1.0,\n        \"max\": 54214.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          54214.0,\n          27107.5,\n          40660.75\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["df.isnull().sum()"],"metadata":{"execution":{"iopub.status.busy":"2024-02-20T09:17:35.475104Z","iopub.execute_input":"2024-02-20T09:17:35.475595Z","iopub.status.idle":"2024-02-20T09:17:35.52112Z","shell.execute_reply.started":"2024-02-20T09:17:35.475556Z","shell.execute_reply":"2024-02-20T09:17:35.519148Z"},"trusted":true,"id":"4AtJABXNWvD3","executionInfo":{"status":"ok","timestamp":1708530891556,"user_tz":-330,"elapsed":16,"user":{"displayName":"","userId":""}},"outputId":"a8b1a758-1d27-4d2f-9639-3354f033a0de","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["ID             0\n","Title          0\n","Genres         0\n","Description    0\n","dtype: int64"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["plt.figure(figsize=(12,15))\n","sns.countplot(data=df, y=\"Genres\", order= df[\"Genres\"].value_counts().index)\n","plt.show()"],"metadata":{"execution":{"iopub.status.busy":"2024-02-20T09:17:35.525501Z","iopub.execute_input":"2024-02-20T09:17:35.526006Z","iopub.status.idle":"2024-02-20T09:17:36.124045Z","shell.execute_reply.started":"2024-02-20T09:17:35.525965Z","shell.execute_reply":"2024-02-20T09:17:36.122922Z"},"trusted":true,"id":"7weD0utPWvD4","executionInfo":{"status":"ok","timestamp":1708530891556,"user_tz":-330,"elapsed":14,"user":{"displayName":"","userId":""}},"outputId":"b2cb6eff-7f03-43ba-f572-cfad0cc28030","colab":{"base_uri":"https://localhost:8080/","height":770}},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x1500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["X=df[\"Description\"]\n","y=df[\"Genres\"]\n","X_train, X_validate, y_train, y_validate = train_test_split(X, y, test_size=0.2, random_state=42)"],"metadata":{"execution":{"iopub.status.busy":"2024-02-20T09:17:36.125467Z","iopub.execute_input":"2024-02-20T09:17:36.126127Z","iopub.status.idle":"2024-02-20T09:17:36.144731Z","shell.execute_reply.started":"2024-02-20T09:17:36.126084Z","shell.execute_reply":"2024-02-20T09:17:36.14387Z"},"trusted":true,"id":"XVGXgaGeWvD4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Convert text to numerical features using TF-IDF\n","tfidf_vectorizer = TfidfVectorizer(max_features=5000)\n","X_train_tfidf = tfidf_vectorizer.fit_transform(X_train)\n","X_validate_tfidf = tfidf_vectorizer.transform(X_validate)"],"metadata":{"execution":{"iopub.status.busy":"2024-02-20T09:17:36.146705Z","iopub.execute_input":"2024-02-20T09:17:36.147518Z","iopub.status.idle":"2024-02-20T09:17:44.547763Z","shell.execute_reply.started":"2024-02-20T09:17:36.147479Z","shell.execute_reply":"2024-02-20T09:17:44.546138Z"},"trusted":true,"id":"9hPNH0wSWvD4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["svm_classifier = SVC()\n","svm_classifier.fit(X_validate_tfidf, y_validate)"],"metadata":{"execution":{"iopub.status.busy":"2024-02-20T09:17:44.549391Z","iopub.execute_input":"2024-02-20T09:17:44.549779Z","iopub.status.idle":"2024-02-20T09:21:07.202024Z","shell.execute_reply.started":"2024-02-20T09:17:44.549747Z","shell.execute_reply":"2024-02-20T09:21:07.200684Z"},"trusted":true,"id":"rs_WLXYtWvD4","executionInfo":{"status":"ok","timestamp":1708531043840,"user_tz":-330,"elapsed":148706,"user":{"displayName":"","userId":""}},"outputId":"2df20df9-8c8e-40b3-e111-6668b75789cc","colab":{"base_uri":"https://localhost:8080/","height":74}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["SVC()"],"text/html":["<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>SVC()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">SVC</label><div class=\"sk-toggleable__content\"><pre>SVC()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["y_pred = svm_classifier.predict(X_validate_tfidf)\n","accuracy = accuracy_score(y_validate, y_pred)\n","print(\"Accuracy:\", accuracy)"],"metadata":{"execution":{"iopub.status.busy":"2024-02-20T09:21:07.203532Z","iopub.execute_input":"2024-02-20T09:21:07.204647Z","iopub.status.idle":"2024-02-20T09:22:32.920179Z","shell.execute_reply.started":"2024-02-20T09:21:07.204611Z","shell.execute_reply":"2024-02-20T09:22:32.918335Z"},"trusted":true,"id":"DGlaP5dYWvD5","executionInfo":{"status":"ok","timestamp":1708531098160,"user_tz":-330,"elapsed":54325,"user":{"displayName":"","userId":""}},"outputId":"94d218e8-ebb9-4a49-c146-59577f2a32b6","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.8576962095361063\n"]}]}]}